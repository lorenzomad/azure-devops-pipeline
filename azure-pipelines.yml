# Starter pipeline
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'pipeline service connection'
    appType: 'webAppLinux'
    appName: 'mywebapplorenzo123'
    deployToSlotOrASE: true
    resourceGroupName: 'Azuredevops'
    slotName: 'production'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    runtimeStack: 'PYTHON|3.7'
    startUpCommand: 'python app.py'


trigger:
- main

pool: Agent pool lorenzo

pool:
  vmImage: ubuntu-latest

variables:
  # TODO: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'pipeline service connection'
  
  # TODO: Specify the value of the existing Web App name
  webAppName: 'mywebapplorenzo123'

  # Environment name
  environmentName: 'flask-ml-service'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:    
    - script: |
        python3.7 -m pip install --upgrade pip
        python3.7 -m pip install setup
        python3.7 -m pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: 'myStep 1'
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
      workingDirectory: $(projectRoot)
      displayName: 'myStep 2'
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName:  'myStep 3 - Run lint tests'
    - task: ArchiveFiles@2
      displayName: 'myStep 4 - Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'myStep 5 - Upload package'
      artifact: drop

